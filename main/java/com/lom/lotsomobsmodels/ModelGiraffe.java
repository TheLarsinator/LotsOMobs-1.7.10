// Date: 12.11.2012 14:34:27
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package com.lom.lotsomobsmodels;

import org.lwjgl.opengl.GL11;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;


@SideOnly(Side.CLIENT)
public class ModelGiraffe extends ModelBase
{
  //fields
    ModelRenderer Body;
    ModelRenderer FLeg1;
    ModelRenderer FLeg2;
    ModelRenderer BLeg1;
    ModelRenderer BLeg2;
    ModelRenderer Neck;
    ModelRenderer Knot2;
    ModelRenderer HeadB;
    ModelRenderer HeadT;
    ModelRenderer Knot1;
    ModelRenderer Tail;
  
  public ModelGiraffe()
  {
    textureWidth = 256;
    textureHeight = 256;
    
      Body = new ModelRenderer(this, 0, 0);
      Body.addBox(0F, 0F, 0F, 15, 24, 34);
      Body.setRotationPoint(-6F, -28F, 0F);
      Body.setTextureSize(256, 256);
      Body.mirror = true;
      setRotation(Body, -0.1487144F, 0F, 0F);
      FLeg1 = new ModelRenderer(this, 120, 70);
      FLeg1.addBox(0F, 0F, 0F, 3, 30, 4);
      FLeg1.setRotationPoint(6F, -6F, -3F);
      FLeg1.setTextureSize(256, 256);
      FLeg1.mirror = true;
      setRotation(FLeg1, 0F, 0F, 0F);
      FLeg2 = new ModelRenderer(this, 103, 70);
      FLeg2.addBox(0F, 0F, 0F, 3, 30, 4);
      FLeg2.setRotationPoint(-6F, -6F, -3F);
      FLeg2.setTextureSize(256, 256);
      FLeg2.mirror = true;
      setRotation(FLeg2, 0F, 0F, 0F);
      BLeg1 = new ModelRenderer(this, 140, 70);
      BLeg1.addBox(0F, 0F, 0F, 3, 26, 5);
      BLeg1.setRotationPoint(6F, -2F, 25F);
      BLeg1.setTextureSize(256, 256);
      BLeg1.mirror = true;
      setRotation(BLeg1, 0F, 0F, 0F);
      BLeg2 = new ModelRenderer(this, 165, 70);
      BLeg2.addBox(0F, 0F, 0F, 3, 26, 5);
      BLeg2.setRotationPoint(-6F, -2F, 25F);
      BLeg2.setTextureSize(256, 256);
      BLeg2.mirror = true;
      setRotation(BLeg2, 0F, 0F, 0F);
      Neck = new ModelRenderer(this, 102, 0);
      Neck.addBox(-2F, 0F, -45F, 3, 5, 45);
      Neck.setRotationPoint(2F, -24F, 5F);
      Neck.setTextureSize(256, 256);
      Neck.mirror = true;
      setRotation(Neck, -1.07818F, 0F, 0F);
      Knot2 = new ModelRenderer(this, 24, 89);
      Knot2.addBox(0F, 0F, 0F, 1, 2, 1);
      Knot2.setRotationPoint(3F, -67F, -16F);
      Knot2.setTextureSize(256, 256);
      Knot2.mirror = true;
      setRotation(Knot2, 0F, 0F, 0F);
      HeadB = new ModelRenderer(this, 0, 72);
      HeadB.addBox(0F, 0F, 0F, 5, 3, 10);
      HeadB.setRotationPoint(-1F, -63F, -25F);
      HeadB.setTextureSize(256, 256);
      HeadB.mirror = true;
      setRotation(HeadB, 0F, 0F, 0F);
      HeadT = new ModelRenderer(this, 0, 89);
      HeadT.addBox(0F, 0F, 0F, 5, 3, 5);
      HeadT.setRotationPoint(-1F, -65F, -20F);
      HeadT.setTextureSize(256, 256);
      HeadT.mirror = true;
      setRotation(HeadT, 0F, 0F, 0F);
      Knot1 = new ModelRenderer(this, 33, 89);
      Knot1.addBox(0F, 0F, 0F, 1, 2, 1);
      Knot1.setRotationPoint(-1F, -67F, -16F);
      Knot1.setTextureSize(256, 256);
      Knot1.mirror = true;
      setRotation(Knot1, 0F, 0F, 0F);
      Tail = new ModelRenderer(this, 0, 0);
      Tail.addBox(-1F, 0F, 0F, 3, 10, 1);
      Tail.setRotationPoint(1F, -18F, 32F);
      Tail.setTextureSize(256, 256);
      Tail.mirror = true;
      setRotation(Tail, 0.669215F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5);
    if (this.isChild)
    {
        float var8 = 2.0F;
        GL11.glPushMatrix();
        GL11.glTranslatef(0.0F, 5.0F * f5, 2.0F * f5);
        GL11.glPopMatrix();
        GL11.glPushMatrix();
        GL11.glScalef(1.0F / var8, 1.0F / var8, 1.0F / var8);
        GL11.glTranslatef(0.0F, 24.0F * f5, 0.0F);
        Body.render(f5);
        FLeg1.render(f5);
        FLeg2.render(f5);
        BLeg1.render(f5);
        BLeg2.render(f5);
        Neck.render(f5);
        Knot2.render(f5);
        HeadB.render(f5);
        HeadT.render(f5);
        Knot1.render(f5);
        Tail.render(f5);
        GL11.glPopMatrix();
        
    }
    else
    {
    Body.render(f5);
    FLeg1.render(f5);
    FLeg2.render(f5);
    BLeg1.render(f5);
    BLeg2.render(f5);
    Neck.render(f5);
    Knot2.render(f5);
    HeadB.render(f5);
    HeadT.render(f5);
    Knot1.render(f5);
    Tail.render(f5);
    }
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
    FLeg1.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    BLeg2.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    BLeg1.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    FLeg2.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
  }

}
