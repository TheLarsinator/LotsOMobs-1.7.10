// Date: 17.12.2012 15:36:42
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package com.lom.lotsomobsmodels;

import org.lwjgl.opengl.GL11;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;


@SideOnly(Side.CLIENT)
public class ModelLizard extends ModelBase
{
  //fields
    ModelRenderer Body;
    ModelRenderer Neck;
    ModelRenderer Head;
    ModelRenderer Eyes2;
    ModelRenderer Eyes;
    ModelRenderer TLeg1;
    ModelRenderer TLeg2;
    ModelRenderer TLeg3;
    ModelRenderer TLeg4;
    ModelRenderer Leg2;
    ModelRenderer Leg1;
    ModelRenderer Leg3;
    ModelRenderer Leg4;
    ModelRenderer Tail2;
    ModelRenderer Tail1;
    ModelRenderer Spike5;
    ModelRenderer Spike10;
    ModelRenderer Spike2;
    ModelRenderer Spike3;
    ModelRenderer Spike4;
    ModelRenderer Spike1;
    ModelRenderer Spike6;
    ModelRenderer Spike7;
    ModelRenderer Spike8;
    ModelRenderer Spike9;
  
  public ModelLizard()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      Body = new ModelRenderer(this, 0, 17);
      Body.addBox(0F, 0F, 0F, 6, 3, 12);
      Body.setRotationPoint(-3F, 18F, -5F);
      Body.setTextureSize(64, 32);
      Body.mirror = true;
      setRotation(Body, 0F, 0F, 0F);
      Neck = new ModelRenderer(this, 17, 9);
      Neck.addBox(0F, 0F, 0F, 4, 2, 3);
      Neck.setRotationPoint(-2F, 19F, -7F);
      Neck.setTextureSize(64, 32);
      Neck.mirror = true;
      setRotation(Neck, 0F, 0F, 0F);
      Head = new ModelRenderer(this, 34, 17);
      Head.addBox(0F, 0F, 0F, 8, 3, 7);
      Head.setRotationPoint(-4F, 17F, -13F);
      Head.setTextureSize(64, 32);
      Head.mirror = true;
      setRotation(Head, 0F, 0F, 0F);
      Eyes2 = new ModelRenderer(this, 50, 3);
      Eyes2.addBox(0F, 0F, 0F, 3, 3, 3);
      Eyes2.setRotationPoint(1F, 15F, -9F);
      Eyes2.setTextureSize(64, 32);
      Eyes2.mirror = true;
      setRotation(Eyes2, 0F, 0F, 0F);
      Eyes = new ModelRenderer(this, 50, 10);
      Eyes.addBox(0F, 0F, 0F, 3, 3, 3);
      Eyes.setRotationPoint(-4F, 15F, -9F);
      Eyes.setTextureSize(64, 32);
      Eyes.mirror = true;
      setRotation(Eyes, 0F, 0F, 0F);
      TLeg1 = new ModelRenderer(this, 40, 0);
      TLeg1.addBox(0F, 0F, 0F, 3, 1, 2);
      TLeg1.setRotationPoint(3F, 19F, -4F);
      TLeg1.setTextureSize(64, 32);
      TLeg1.mirror = true;
      setRotation(TLeg1, 0F, 0F, 0F);
      TLeg2 = new ModelRenderer(this, 40, 0);
      TLeg2.addBox(0F, 0F, 0F, 3, 1, 2);
      TLeg2.setRotationPoint(-6F, 19F, -4F);
      TLeg2.setTextureSize(64, 32);
      TLeg2.mirror = true;
      setRotation(TLeg2, 0F, 0F, 0F);
      TLeg3 = new ModelRenderer(this, 40, 0);
      TLeg3.addBox(0F, 0F, 0F, 3, 1, 2);
      TLeg3.setRotationPoint(3F, 19F, 3F);
      TLeg3.setTextureSize(64, 32);
      TLeg3.mirror = true;
      setRotation(TLeg3, 0F, 0F, 0F);
      TLeg4 = new ModelRenderer(this, 40, 0);
      TLeg4.addBox(0F, 0F, 0F, 3, 1, 2);
      TLeg4.setRotationPoint(-6F, 19F, 3F);
      TLeg4.setTextureSize(64, 32);
      TLeg4.mirror = true;
      setRotation(TLeg4, 0F, 0F, 0F);
      Leg2 = new ModelRenderer(this, 10, 0);
      Leg2.addBox(0F, 0F, 0F, 2, 4, 2);
      Leg2.setRotationPoint(-6F, 20F, -4F);
      Leg2.setTextureSize(64, 32);
      Leg2.mirror = true;
      setRotation(Leg2, 0F, 0F, 0F);
      Leg1 = new ModelRenderer(this, 10, 0);
      Leg1.addBox(0F, 0F, 0F, 2, 4, 2);
      Leg1.setRotationPoint(4F, 20F, -4F);
      Leg1.setTextureSize(64, 32);
      Leg1.mirror = true;
      setRotation(Leg1, 0F, 0F, 0F);
      Leg3 = new ModelRenderer(this, 10, 0);
      Leg3.addBox(0F, 0F, 0F, 2, 4, 2);
      Leg3.setRotationPoint(4F, 20F, 3F);
      Leg3.setTextureSize(64, 32);
      Leg3.mirror = true;
      setRotation(Leg3, 0F, 0F, 0F);
      Leg4 = new ModelRenderer(this, 10, 0);
      Leg4.addBox(0F, 0F, 0F, 2, 4, 2);
      Leg4.setRotationPoint(-6F, 20F, 3F);
      Leg4.setTextureSize(64, 32);
      Leg4.mirror = true;
      setRotation(Leg4, 0F, 0F, 0F);
      Tail2 = new ModelRenderer(this, 24, 8);
      Tail2.addBox(0F, 0F, 0F, 2, 1, 8);
      Tail2.setRotationPoint(-1F, 18F, 15F);
      Tail2.setTextureSize(64, 32);
      Tail2.mirror = true;
      setRotation(Tail2, 0F, 0F, 0F);
      Tail1 = new ModelRenderer(this, 0, 7);
      Tail1.addBox(0F, 0F, 0F, 4, 2, 8);
      Tail1.setRotationPoint(-2F, 18F, 7F);
      Tail1.setTextureSize(64, 32);
      Tail1.mirror = true;
      setRotation(Tail1, 0F, 0F, 0F);
      Spike5 = new ModelRenderer(this, 0, 0);
      Spike5.addBox(0F, 0F, 0F, 1, 1, 1);
      Spike5.setRotationPoint(1F, 17F, 4F);
      Spike5.setTextureSize(64, 32);
      Spike5.mirror = true;
      setRotation(Spike5, 0F, 0F, 0F);
      Spike10 = new ModelRenderer(this, 0, 0);
      Spike10.addBox(0F, 0F, 0F, 1, 1, 1);
      Spike10.setRotationPoint(-2F, 17F, 4F);
      Spike10.setTextureSize(64, 32);
      Spike10.mirror = true;
      setRotation(Spike10, 0F, 0F, 0F);
      Spike2 = new ModelRenderer(this, 0, 0);
      Spike2.addBox(0F, 0F, 0F, 1, 1, 1);
      Spike2.setRotationPoint(1F, 17F, -2F);
      Spike2.setTextureSize(64, 32);
      Spike2.mirror = true;
      setRotation(Spike2, 0F, 0F, 0F);
      Spike3 = new ModelRenderer(this, 0, 0);
      Spike3.addBox(0F, 0F, 0F, 1, 1, 1);
      Spike3.setRotationPoint(1F, 17F, 0F);
      Spike3.setTextureSize(64, 32);
      Spike3.mirror = true;
      setRotation(Spike3, 0F, 0F, 0F);
      Spike4 = new ModelRenderer(this, 0, 0);
      Spike4.addBox(0F, 0F, 0F, 1, 1, 1);
      Spike4.setRotationPoint(1F, 17F, 2F);
      Spike4.setTextureSize(64, 32);
      Spike4.mirror = true;
      setRotation(Spike4, 0F, 0F, 0F);
      Spike1 = new ModelRenderer(this, 0, 0);
      Spike1.addBox(0F, 0F, 0F, 1, 1, 1);
      Spike1.setRotationPoint(1F, 17F, -4F);
      Spike1.setTextureSize(64, 32);
      Spike1.mirror = true;
      setRotation(Spike1, 0F, 0F, 0F);
      Spike6 = new ModelRenderer(this, 0, 0);
      Spike6.addBox(0F, 0F, 0F, 1, 1, 1);
      Spike6.setRotationPoint(-2F, 17F, -4F);
      Spike6.setTextureSize(64, 32);
      Spike6.mirror = true;
      setRotation(Spike6, 0F, 0F, 0F);
      Spike7 = new ModelRenderer(this, 0, 0);
      Spike7.addBox(0F, 0F, 0F, 1, 1, 1);
      Spike7.setRotationPoint(-2F, 17F, -2F);
      Spike7.setTextureSize(64, 32);
      Spike7.mirror = true;
      setRotation(Spike7, 0F, 0F, 0F);
      Spike8 = new ModelRenderer(this, 0, 0);
      Spike8.addBox(0F, 0F, 0F, 1, 1, 1);
      Spike8.setRotationPoint(-2F, 17F, 0F);
      Spike8.setTextureSize(64, 32);
      Spike8.mirror = true;
      setRotation(Spike8, 0F, 0F, 0F);
      Spike9 = new ModelRenderer(this, 0, 0);
      Spike9.addBox(0F, 0F, 0F, 1, 1, 1);
      Spike9.setRotationPoint(-2F, 17F, 2F);
      Spike9.setTextureSize(64, 32);
      Spike9.mirror = true;
      setRotation(Spike9, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5);
    if (this.isChild)
    {
        float var8 = 2.0F;
        GL11.glPushMatrix();
        GL11.glTranslatef(0.0F, 5.0F * f5, 2.0F * f5);
        GL11.glPopMatrix();
        GL11.glPushMatrix();
        GL11.glScalef(1.0F / var8, 1.0F / var8, 1.0F / var8);
        GL11.glTranslatef(0.0F, 24.0F * f5, 0.0F);
        Body.render(f5);
        Neck.render(f5);
        Head.render(f5);
        Eyes2.render(f5);
        Eyes.render(f5);
        TLeg1.render(f5);
        TLeg2.render(f5);
        TLeg3.render(f5);
        TLeg4.render(f5);
        Leg2.render(f5);
        Leg1.render(f5);
        Leg3.render(f5);
        Leg4.render(f5);
        Tail2.render(f5);
        Tail1.render(f5);
        Spike5.render(f5);
        Spike10.render(f5);
        Spike2.render(f5);
        Spike3.render(f5);
        Spike4.render(f5);
        Spike1.render(f5);
        Spike6.render(f5);
        Spike7.render(f5);
        Spike8.render(f5);
        Spike9.render(f5);
        GL11.glPopMatrix();
        
    }
    else
    {
    Body.render(f5);
    Neck.render(f5);
    Head.render(f5);
    Eyes2.render(f5);
    Eyes.render(f5);
    TLeg1.render(f5);
    TLeg2.render(f5);
    TLeg3.render(f5);
    TLeg4.render(f5);
    Leg2.render(f5);
    Leg1.render(f5);
    Leg3.render(f5);
    Leg4.render(f5);
    Tail2.render(f5);
    Tail1.render(f5);
    Spike5.render(f5);
    Spike10.render(f5);
    Spike2.render(f5);
    Spike3.render(f5);
    Spike4.render(f5);
    Spike1.render(f5);
    Spike6.render(f5);
    Spike7.render(f5);
    Spike8.render(f5);
    Spike9.render(f5);
    }
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
    Leg1.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    Leg2.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    Leg3.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    Leg4.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
  }

}
