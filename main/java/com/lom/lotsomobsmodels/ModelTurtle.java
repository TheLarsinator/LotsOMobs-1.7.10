// Date: 13.12.2012 19:54:18
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package com.lom.lotsomobsmodels;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;
@SideOnly(Side.CLIENT)
public class ModelTurtle extends ModelBase
{
  //fields
    ModelRenderer ShieldB;
    ModelRenderer ShieldT;
    ModelRenderer Leg2;
    ModelRenderer Leg1;
    ModelRenderer Leg4;
    ModelRenderer Leg3;
    ModelRenderer Neck;
    ModelRenderer Head;
  
  public ModelTurtle()
  {
    textureWidth = 128;
    textureHeight = 64;
    
      ShieldB = new ModelRenderer(this, 0, 21);
      ShieldB.addBox(0F, 0F, 0F, 9, 1, 11);
      ShieldB.setRotationPoint(-3F, 21F, -7F);
      ShieldB.setTextureSize(128, 64);
      ShieldB.mirror = true;
      setRotation(ShieldB, 0F, 0F, 0F);
      ShieldT = new ModelRenderer(this, 0, 35);
      ShieldT.addBox(0F, 0F, 0F, 7, 3, 9);
      ShieldT.setRotationPoint(-2F, 18F, -6F);
      ShieldT.setTextureSize(128, 64);
      ShieldT.mirror = true;
      setRotation(ShieldT, 0F, 0F, 0F);
      Leg2 = new ModelRenderer(this, 0, 0);
      Leg2.addBox(0F, 0F, 0F, 2, 3, 2);
      Leg2.setRotationPoint(-2F, 21F, -6F);
      Leg2.setTextureSize(128, 64);
      Leg2.mirror = true;
      setRotation(Leg2, 0F, 0F, 0F);
      Leg1 = new ModelRenderer(this, 0, 0);
      Leg1.addBox(0F, 0F, 0F, 2, 3, 2);
      Leg1.setRotationPoint(3F, 21F, -6F);
      Leg1.setTextureSize(128, 64);
      Leg1.mirror = true;
      setRotation(Leg1, 0F, 0F, 0F);
      Leg4 = new ModelRenderer(this, 0, 0);
      Leg4.addBox(0F, 0F, 0F, 2, 3, 2);
      Leg4.setRotationPoint(-2F, 21F, 1F);
      Leg4.setTextureSize(128, 64);
      Leg4.mirror = true;
      setRotation(Leg4, 0F, 0F, 0F);
      Leg3 = new ModelRenderer(this, 0, 0);
      Leg3.addBox(0F, 0F, 0F, 2, 3, 2);
      Leg3.setRotationPoint(3F, 21F, 1F);
      Leg3.setTextureSize(128, 64);
      Leg3.mirror = true;
      setRotation(Leg3, 0F, 0F, 0F);
      Neck = new ModelRenderer(this, 0, 13);
      Neck.addBox(0F, 0F, 0F, 3, 2, 3);
      Neck.setRotationPoint(0F, 20F, -9F);
      Neck.setTextureSize(128, 64);
      Neck.mirror = true;
      setRotation(Neck, 0F, 0F, 0F);
      Head = new ModelRenderer(this, 0, 49);
      Head.addBox(0F, 0F, 0F, 5, 3, 4);
      Head.setRotationPoint(-1F, 18F, -11F);
      Head.setTextureSize(128, 64);
      Head.mirror = true;
      setRotation(Head, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5);
    ShieldB.render(f5);
    ShieldT.render(f5);
    Leg2.render(f5);
    Leg1.render(f5);
    Leg4.render(f5);
    Leg3.render(f5);
    Neck.render(f5);
    Head.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
    Leg1.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    Leg2.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    Leg3.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    Leg4.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
  }

}
