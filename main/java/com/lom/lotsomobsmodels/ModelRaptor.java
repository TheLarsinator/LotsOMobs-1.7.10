// Date: 01.01.2013 22:53:03
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package com.lom.lotsomobsmodels;

import org.lwjgl.opengl.GL11;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;
@SideOnly(Side.CLIENT)
public class ModelRaptor extends ModelBase
{
  //fields
    ModelRenderer Body;
    ModelRenderer Leftleg1;
    ModelRenderer rightleg1;
    ModelRenderer Tail1;
    ModelRenderer Tail2;
    ModelRenderer Tail3;
    ModelRenderer Neck;
    ModelRenderer Head;
    ModelRenderer Jaw1;
    ModelRenderer Jaw2;
    ModelRenderer Leftarm;
    ModelRenderer RightArm;
  
  public ModelRaptor()
  {
    textureWidth = 128;
    textureHeight = 128;
    
      Body = new ModelRenderer(this, 0, 0);
      Body.addBox(0F, 0F, 0F, 10, 9, 14);
      Body.setRotationPoint(-5F, 1F, -5F);
      Body.setTextureSize(128, 128);
      Body.mirror = true;
      setRotation(Body, -0.1115358F, 0F, 0F);
      Leftleg1 = new ModelRenderer(this, 62, 0);
      Leftleg1.addBox(0F, 0F, 0F, 4, 17, 4);
      Leftleg1.setRotationPoint(3F, 7F, 1F);
      Leftleg1.setTextureSize(128, 128);
      Leftleg1.mirror = true;
      setRotation(Leftleg1, 0F, 0F, 0F);
      rightleg1 = new ModelRenderer(this, 84, 0);
      rightleg1.addBox(0F, 0F, 0F, 4, 17, 4);
      rightleg1.setRotationPoint(-7F, 7F, 1F);
      rightleg1.setTextureSize(128, 128);
      rightleg1.mirror = true;
      setRotation(rightleg1, 0F, 0F, 0F);
      Tail1 = new ModelRenderer(this, 0, 100);
      Tail1.addBox(0F, 0F, 0F, 6, 5, 9);
      Tail1.setRotationPoint(-3F, 3F, 8F);
      Tail1.setTextureSize(128, 128);
      Tail1.mirror = true;
      setRotation(Tail1, 0F, 0F, 0F);
      Tail2 = new ModelRenderer(this, 34, 100);
      Tail2.addBox(0F, 0F, 0F, 4, 4, 9);
      Tail2.setRotationPoint(-2F, 3F, 16F);
      Tail2.setTextureSize(128, 128);
      Tail2.mirror = true;
      setRotation(Tail2, 0F, 0F, 0F);
      Tail3 = new ModelRenderer(this, 64, 100);
      Tail3.addBox(0F, 0F, 0F, 2, 3, 11);
      Tail3.setRotationPoint(-1F, 3F, 24F);
      Tail3.setTextureSize(128, 128);
      Tail3.mirror = true;
      setRotation(Tail3, 0F, 0F, 0F);
      Neck = new ModelRenderer(this, 2, 73);
      Neck.addBox(0F, 0F, 0F, 4, 4, 11);
      Neck.setRotationPoint(-2F, -1F, -15F);
      Neck.setTextureSize(128, 128);
      Neck.mirror = true;
      setRotation(Neck, -0.2230717F, 0F, 0F);
      Head = new ModelRenderer(this, 1, 57);
      Head.addBox(0F, 0F, 0F, 6, 7, 7);
      Head.setRotationPoint(-3F, -3F, -20F);
      Head.setTextureSize(128, 128);
      Head.mirror = true;
      setRotation(Head, 0F, 0F, 0F);
      Jaw1 = new ModelRenderer(this, 3, 47);
      Jaw1.addBox(0F, 0F, 0F, 4, 2, 5);
      Jaw1.setRotationPoint(-2F, 2F, -24F);
      Jaw1.setTextureSize(128, 128);
      Jaw1.mirror = true;
      setRotation(Jaw1, 0F, 0F, 0F);
      Jaw2 = new ModelRenderer(this, 22, 48);
      Jaw2.addBox(-2F, 0F, -5F, 4, 2, 5);
      Jaw2.setRotationPoint(0F, -1F, -20F);
      Jaw2.setTextureSize(128, 128);
      Jaw2.mirror = true;
      setRotation(Jaw2, -0.1115358F, 0F, 0F);
      Leftarm = new ModelRenderer(this, 0, 26);
      Leftarm.addBox(1F, 0F, 0F, 1, 1, 6);
      Leftarm.setRotationPoint(4F, 7F, -9F);
      Leftarm.setTextureSize(128, 128);
      Leftarm.mirror = true;
      setRotation(Leftarm, 0.6506257F, 0F, 0F);
      RightArm = new ModelRenderer(this, 17, 26);
      RightArm.addBox(0F, 0F, 0F, 1, 1, 6);
      RightArm.setRotationPoint(-6F, 7F, -8F);
      RightArm.setTextureSize(128, 128);
      RightArm.mirror = true;
      setRotation(RightArm, 0.6506257F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5);
    if (this.isChild)
    {
        float var8 = 2.0F;
        GL11.glPushMatrix();
        GL11.glTranslatef(0.0F, 5.0F * f5, 2.0F * f5);
        GL11.glPopMatrix();
        GL11.glPushMatrix();
        GL11.glScalef(1.0F / var8, 1.0F / var8, 1.0F / var8);
        GL11.glTranslatef(0.0F, 24.0F * f5, 0.0F);
        Body.render(f5);
        Leftleg1.render(f5);
        rightleg1.render(f5);
        Tail1.render(f5);
        Tail2.render(f5);
        Tail3.render(f5);
        Neck.render(f5);
        Head.render(f5);
        Jaw1.render(f5);
        Jaw2.render(f5);
        Leftarm.render(f5);
        RightArm.render(f5);
        GL11.glPopMatrix();
        
    }
    else
    {
    Body.render(f5);
    Leftleg1.render(f5);
    rightleg1.render(f5);
    Tail1.render(f5);
    Tail2.render(f5);
    Tail3.render(f5);
    Neck.render(f5);
    Head.render(f5);
    Jaw1.render(f5);
    Jaw2.render(f5);
    Leftarm.render(f5);
    RightArm.render(f5);
    }
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
    rightleg1.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    Leftleg1.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    Jaw2.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
  }

}
