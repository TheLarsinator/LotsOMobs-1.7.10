// Date: 31.07.2013 23:03:39
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package com.lom.lotsomobsmodels;

import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

import org.lwjgl.opengl.GL11;

public class ModelMuskOx extends ModelLOMBase
{
  //fields
    ModelRenderer horn5;
    ModelRenderer horn3;
    ModelRenderer Fat1;
    ModelRenderer Fat;
    ModelRenderer Hair1;
    ModelRenderer Hair2;
    ModelRenderer Hair4;
    ModelRenderer Hair3;
    ModelRenderer Tail;
    ModelRenderer head;
    ModelRenderer body;
    ModelRenderer leg1;
    ModelRenderer leg2;
    ModelRenderer leg3;
    ModelRenderer leg4;
    ModelRenderer horn4;
    ModelRenderer horn2;
    ModelRenderer udders;
    ModelRenderer horn1;
  
  public ModelMuskOx()
  {
    textureWidth = 128;
    textureHeight = 256;
    
    horn5 = new ModelRenderer(this, 117, 5);
    horn5.addBox(0F, 0F, -4F, 1, 1, 4);
    horn5.setRotationPoint(5.3F, 0.3F, -10F);
    horn5.setTextureSize(128, 256);
    horn5.mirror = true;
    setRotation(horn5, 0.2602503F, -0.3717861F, 0.3346075F);
      horn3 = new ModelRenderer(this, 77, 6);
      horn3.addBox(0F, 0F, -4F, 1, 1, 4);
      horn3.setRotationPoint(-5.3F, -0.5F, -10F);
      horn3.setTextureSize(128, 256);
      horn3.mirror = true;
      setRotation(horn3, 0.5576792F, 0.2230717F, 0.4833219F);
      Fat1 = new ModelRenderer(this, 0, 72);
      Fat1.addBox(0F, 0F, 0F, 10, 2, 6);
      Fat1.setRotationPoint(-5F, 0F, 0F);
      Fat1.setTextureSize(128, 256);
      Fat1.mirror = true;
      setRotation(Fat1, 0F, 0F, 0F);
      Fat = new ModelRenderer(this, 0, 54);
      Fat.addBox(0F, 0F, 0F, 10, 4, 8);
      Fat.setRotationPoint(-5F, -2F, -8F);
      Fat.setTextureSize(128, 256);
      Fat.mirror = true;
      setRotation(Fat, 0F, 0F, 0F);
      Hair1 = new ModelRenderer(this, 44, 50);
      Hair1.addBox(0F, 0F, 0F, 2, 16, 22);
      Hair1.setRotationPoint(3F, 3F, -8F);
      Hair1.setTextureSize(128, 256);
      Hair1.mirror = true;
      setRotation(Hair1, 0F, 0F, -0.1858931F);
      Hair2 = new ModelRenderer(this, 44, 92);
      Hair2.addBox(-1F, 0F, 0F, 2, 16, 22);
      Hair2.setRotationPoint(-4F, 3F, -8F);
      Hair2.setTextureSize(128, 256);
      Hair2.mirror = true;
      setRotation(Hair2, 0F, 0F, 0.185895F);
      Hair4 = new ModelRenderer(this, 44, 154);
      Hair4.addBox(0F, 0F, 0F, 12, 12, 2);
      Hair4.setRotationPoint(-6F, 6F, 12F);
      Hair4.setTextureSize(128, 256);
      Hair4.mirror = true;
      setRotation(Hair4, 0.2230705F, 0F, 0F);
      Hair3 = new ModelRenderer(this, 44, 136);
      Hair3.addBox(0F, 0F, 0F, 12, 12, 2);
      Hair3.setRotationPoint(-6F, 6F, -7F);
      Hair3.setTextureSize(128, 256);
      Hair3.mirror = true;
      setRotation(Hair3, -0.2230717F, 0F, 0F);
      Tail = new ModelRenderer(this, 38, 0);
      Tail.addBox(0F, 0F, 0F, 2, 8, 1);
      Tail.setRotationPoint(-1F, 4F, 13F);
      Tail.setTextureSize(128, 256);
      Tail.mirror = true;
      setRotation(Tail, 0.4089647F, 0F, 0F);
      head = new ModelRenderer(this, 0, 0);
      head.addBox(-4F, -4F, -6F, 8, 8, 6);
      head.setRotationPoint(0F, 4F, -8F);
      head.setTextureSize(128, 256);
      head.mirror = true;
      setRotation(head, 0F, 0F, 0F);
      body = new ModelRenderer(this, 30, 11);
      body.addBox(-6F, -10F, -7F, 12, 22, 10);
      body.setRotationPoint(0F, 5F, 2F);
      body.setTextureSize(128, 256);
      body.mirror = true;
      setRotation(body, 1.570796F, 0F, 0F);
      leg1 = new ModelRenderer(this, 0, 16);
      leg1.addBox(-3F, 0F, -2F, 4, 12, 4);
      leg1.setRotationPoint(-3F, 12F, 11F);
      leg1.setTextureSize(128, 256);
      leg1.mirror = true;
      setRotation(leg1, 0F, 0F, 0F);
      leg2 = new ModelRenderer(this, 0, 16);
      leg2.addBox(-1F, 0F, -2F, 4, 12, 4);
      leg2.setRotationPoint(3F, 12F, 11F);
      leg2.setTextureSize(128, 256);
      leg2.mirror = true;
      setRotation(leg2, 0F, 0F, 0F);
      leg3 = new ModelRenderer(this, 0, 16);
      leg3.addBox(-3F, 0F, -3F, 4, 12, 4);
      leg3.setRotationPoint(-3F, 12F, -5F);
      leg3.setTextureSize(128, 256);
      leg3.mirror = true;
      setRotation(leg3, 0F, 0F, 0F);
      leg4 = new ModelRenderer(this, 0, 16);
      leg4.addBox(-1F, 0F, -3F, 4, 12, 4);
      leg4.setRotationPoint(3F, 12F, -5F);
      leg4.setTextureSize(128, 256);
      leg4.mirror = true;
      setRotation(leg4, 0F, 0F, 0F);
      horn4 = new ModelRenderer(this, 109, 0);
      horn4.addBox(-1F, 0F, 0F, 1, 4, 1);
      horn4.setRotationPoint(3F, -2F, -10.5F);
      horn4.setTextureSize(128, 256);
      horn4.mirror = true;
      setRotation(horn4, 0F, 0F, -0.8551066F);
      horn2 = new ModelRenderer(this, 90, 0);
      horn2.addBox(0F, 0F, 0F, 6, 2, 2);
      horn2.setRotationPoint(-3F, -2F, -11F);
      horn2.setTextureSize(128, 256);
      horn2.mirror = true;
      setRotation(horn2, 0F, 0F, 0F);
      udders = new ModelRenderer(this, 52, 0);
      udders.addBox(-2F, -3F, 0F, 4, 6, 2);
      udders.setRotationPoint(0F, 14F, 10F);
      udders.setTextureSize(128, 256);
      udders.mirror = true;
      setRotation(udders, 1.570796F, 0F, 0F);
      horn1 = new ModelRenderer(this, 82, 0);
      horn1.addBox(0F, 0F, 0F, 1, 4, 1);
      horn1.setRotationPoint(-3F, -2F, -10.5F);
      horn1.setTextureSize(128, 256);
      horn1.mirror = true;
      setRotation(horn1, 0F, 0F, 0.8551081F);
      
      this.addChildTo(horn1, head);
      this.addChildTo(horn2, head);
      this.addChildTo(horn3, head);
      this.addChildTo(horn4, head);
      this.addChildTo(horn5, head);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5);
    if (this.isChild)
    {
        float var8 = 2.0F;
        GL11.glPushMatrix();
        GL11.glTranslatef(0.0F, 5.0F * f5, 2.0F * f5);
        GL11.glPopMatrix();
        GL11.glPushMatrix();
        GL11.glScalef(1.0F / var8, 1.0F / var8, 1.0F / var8);
        GL11.glTranslatef(0.0F, 24.0F * f5, 0.0F);
//    horn5.render(f5);
//    horn3.render(f5);
    Fat1.render(f5);
    Fat.render(f5);
    Hair1.render(f5);
    Hair2.render(f5);
    Hair4.render(f5);
    Hair3.render(f5);
    Tail.render(f5);
    head.render(f5);
    body.render(f5);
    leg1.render(f5);
    leg2.render(f5);
    leg3.render(f5);
    leg4.render(f5);
//    horn4.render(f5);
//    horn2.render(f5);
    udders.render(f5);
//    horn1.render(f5);
    GL11.glPopMatrix();
    
}
else
{
//    horn5.render(f5);
//    horn3.render(f5);
    Fat1.render(f5);
    Fat.render(f5);
    Hair1.render(f5);
    Hair2.render(f5);
    Hair4.render(f5);
    Hair3.render(f5);
    Tail.render(f5);
    head.render(f5);
    body.render(f5);
    leg1.render(f5);
    leg2.render(f5);
    leg3.render(f5);
    leg4.render(f5);
//    horn4.render(f5);
//    horn2.render(f5);
    udders.render(f5);
//    horn1.render(f5);
}
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
  {
	    super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
	    Tail.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;

	    this.head.rotateAngleX = f4 / (180F / (float)Math.PI);
	    this.head.rotateAngleY = f3 / (180F / (float)Math.PI);
	    this.body.rotateAngleX = ((float)Math.PI / 2F);
	    this.leg1.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
	    this.leg2.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
	    this.leg3.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
	    this.leg4.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
	  }

}
