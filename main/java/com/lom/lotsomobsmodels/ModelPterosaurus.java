// Date: 19.01.2013 18:45:40
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package com.lom.lotsomobsmodels;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;
@SideOnly(Side.CLIENT)
public class ModelPterosaurus extends ModelBase
{
  //fields
    ModelRenderer Body;
    ModelRenderer Neck;
    ModelRenderer Beack1;
    ModelRenderer Head;
    ModelRenderer Horn;
    ModelRenderer Beack2;
    ModelRenderer ArmR1;
    ModelRenderer RightW1;
    ModelRenderer RightW3;
    ModelRenderer RightW2;
    ModelRenderer ArmL1;
    ModelRenderer LeftW1;
    ModelRenderer ArmR2;
    ModelRenderer ArmL2;
    ModelRenderer LeftW2;
    ModelRenderer ArmR3;
    ModelRenderer ArmL3;
    ModelRenderer LeftW3;
    ModelRenderer Leg2;
    ModelRenderer Leg1;
  
  public ModelPterosaurus()
  {
    textureWidth = 512;
    textureHeight = 512;
    
      Body = new ModelRenderer(this, 0, 0);
      Body.addBox(0F, 0F, 0F, 16, 5, 23);
      Body.setRotationPoint(-8F, 15F, -5F);
      Body.setTextureSize(512, 512);
      Body.mirror = true;
      setRotation(Body, 0F, 0F, 0F);
      Neck = new ModelRenderer(this, 0, 75);
      Neck.addBox(0F, 0F, 0F, 4, 3, 5);
      Neck.setRotationPoint(-2F, 16F, -10F);
      Neck.setTextureSize(512, 512);
      Neck.mirror = true;
      setRotation(Neck, 0F, 0F, 0F);
      Beack1 = new ModelRenderer(this, 0, 39);
      Beack1.addBox(0F, 1F, -11F, 6, 1, 11);
      Beack1.setRotationPoint(-3F, 18F, -10F);
      Beack1.setTextureSize(512, 512);
      Beack1.mirror = true;
      setRotation(Beack1, 0F, 0F, 0F);
      Head = new ModelRenderer(this, 0, 59);
      Head.addBox(0F, 0F, 0F, 8, 4, 6);
      Head.setRotationPoint(-4F, 19F, -14F);
      Head.setTextureSize(512, 512);
      Head.mirror = true;
      setRotation(Head, 1.226894F, 0F, 0F);
      Horn = new ModelRenderer(this, 45, 59);
      Horn.addBox(0F, 0F, 0F, 4, 8, 3);
      Horn.setRotationPoint(-2F, 16F, -9F);
      Horn.setTextureSize(512, 512);
      Horn.mirror = true;
      setRotation(Horn, 2.602505F, 0F, 0F);
      Beack2 = new ModelRenderer(this, 39, 39);
      Beack2.addBox(0F, 0F, -11F, 6, 1, 11);
      Beack2.setRotationPoint(-3F, 17F, -10F);
      Beack2.setTextureSize(512, 512);
      Beack2.mirror = true;
      setRotation(Beack1, 0.1487144F, 0F, 0F);
      ArmR1 = new ModelRenderer(this, 300, 10);
      ArmR1.addBox(0F, 0F, 0F, 17, 3, 1);
      ArmR1.setRotationPoint(-7F, 16F, -4F);
      ArmR1.setTextureSize(512, 512);
      ArmR1.mirror = true;
      setRotation(ArmR1, 0F, 2.695451F, 0F);
      RightW1 = new ModelRenderer(this, 100, 0);
      RightW1.addBox(-9F, 1F, -19F, 26, 1, 19);
      RightW1.setRotationPoint(-7F, 16F, -4F);
      RightW1.setTextureSize(512, 512);
      RightW1.mirror = true;
      setRotation(RightW1, 0F, 2.695451F, 0F);
      RightW3 = new ModelRenderer(this, 100, 60);
      RightW3.addBox(20F, 1F, 1F, 10, 1, 15);
      RightW3.setRotationPoint(-7F, 16F, -4F);
      RightW3.setTextureSize(512, 512);
      RightW3.mirror = true;
      setRotation(RightW3, 0F, -2.658276F, 0F);
      RightW2 = new ModelRenderer(this, 100, 30);
      RightW2.addBox(12F, 1F, -1F, 12, 1, 12);
      RightW2.setRotationPoint(-7F, 16F, -4F);
      RightW2.setTextureSize(512, 512);
      RightW2.mirror = true;
      setRotation(RightW2, 0F, -2.886583F, 0F);
      ArmL1 = new ModelRenderer(this, 300, 0);
      ArmL1.addBox(0F, 0F, 0F, 17, 3, 1);
      ArmL1.setRotationPoint(7F, 16F, -4F);
      ArmL1.setTextureSize(512, 512);
      ArmL1.mirror = true;
      setRotation(ArmL1, 0F, 0.4461433F, 0F);
      LeftW1 = new ModelRenderer(this, 200, 0);
      LeftW1.addBox(-9F, 1F, 1F, 26, 1, 19);
      LeftW1.setRotationPoint(7F, 16F, -4F);
      LeftW1.setTextureSize(512, 512);
      LeftW1.mirror = true;
      setRotation(LeftW1, 0F, 0.4461411F, 0F);
      ArmR2 = new ModelRenderer(this, 350, 10);
      ArmR2.addBox(12F, 0F, 11F, 11, 3, 1);
      ArmR2.setRotationPoint(-7F, 16F, -4F);
      ArmR2.setTextureSize(512, 512);
      ArmR2.mirror = true;
      setRotation(ArmR2, 0F, -2.886583F, 0F);
      ArmL2 = new ModelRenderer(this, 350, 0);
      ArmL2.addBox(13F, 0F, -11F, 11, 3, 1);
      ArmL2.setRotationPoint(7F, 16F, -4F);
      ArmL2.setTextureSize(512, 512);
      ArmL2.mirror = true;
      setRotation(ArmL2, 0F, -0.2602503F, 0F);
      LeftW2 = new ModelRenderer(this, 200, 30);
      LeftW2.addBox(12F, 1F, -10F, 12, 1, 12);
      LeftW2.setRotationPoint(7F, 16F, -4F);
      LeftW2.setTextureSize(512, 512);
      LeftW2.mirror = true;
      setRotation(LeftW2, 0F, -0.260246F, 0F);
      ArmR3 = new ModelRenderer(this, 400, 10);
      ArmR3.addBox(19F, 0F, 16F, 11, 3, 1);
      ArmR3.setRotationPoint(-7F, 16F, -4F);
      ArmR3.setTextureSize(512, 512);
      ArmR3.mirror = true;
      setRotation(ArmR3, 0F, -2.648968F, 0F);
      ArmL3 = new ModelRenderer(this, 400, 0);
      ArmL3.addBox(21F, 0F, -16F, 11, 3, 1);
      ArmL3.setRotationPoint(7F, 16F, -4F);
      ArmL3.setTextureSize(512, 512);
      ArmL3.mirror = true;
      setRotation(ArmL3, 0F, -0.4833219F, 0F);
      LeftW3 = new ModelRenderer(this, 200, 60);
      LeftW3.addBox(21F, 1F, -15F, 10, 1, 15);
      LeftW3.setRotationPoint(7F, 16F, -4F);
      LeftW3.setTextureSize(512, 512);
      LeftW3.mirror = true;
      setRotation(LeftW3, 0F, -0.4833166F, 0F);
      Leg2 = new ModelRenderer(this, 50, 100);
      Leg2.addBox(0F, 0F, 0F, 2, 2, 7);
      Leg2.setRotationPoint(-7F, 17F, 18F);
      Leg2.setTextureSize(512, 512);
      Leg2.mirror = true;
      setRotation(Leg2, 0F, 0F, 0F);
      Leg1 = new ModelRenderer(this, 50, 82);
      Leg1.addBox(0F, 0F, 0F, 2, 2, 7);
      Leg1.setRotationPoint(5F, 17F, 18F);
      Leg1.setTextureSize(512, 512);
      Leg1.mirror = true;
      setRotation(Leg1, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5);
    Body.render(f5);
    Neck.render(f5);
    Beack1.render(f5);
    Head.render(f5);
    Horn.render(f5);
    Beack2.render(f5);
    ArmR1.render(f5);
    RightW1.render(f5);
    RightW3.render(f5);
    RightW2.render(f5);
    ArmL1.render(f5);
    LeftW1.render(f5);
    ArmR2.render(f5);
    ArmL2.render(f5);
    LeftW2.render(f5);
    ArmR3.render(f5);
    ArmL3.render(f5);
    LeftW3.render(f5);
    Leg2.render(f5);
    Leg1.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
    RightW1.rotateAngleZ = MathHelper.cos(f * 0.6662F) * .8F * f1;
    RightW2.rotateAngleZ = MathHelper.cos(f * 0.6662F) * .8F * f1;
    RightW3.rotateAngleZ = MathHelper.cos(f * 0.6662F) * .8F * f1;
    ArmR1.rotateAngleZ = MathHelper.cos(f * 0.6662F) * .8F * f1;
    ArmR2.rotateAngleZ = MathHelper.cos(f * 0.6662F) * .8F * f1;
    ArmR3.rotateAngleZ = MathHelper.cos(f * 0.6662F) * .8F * f1;
    
    LeftW1.rotateAngleZ = MathHelper.cos(f * 0.6662F + (float)Math.PI) * .8F * f1;
    LeftW2.rotateAngleZ = MathHelper.cos(f * 0.6662F + (float)Math.PI) * .8F * f1;
    LeftW3.rotateAngleZ = MathHelper.cos(f * 0.6662F + (float)Math.PI) * .8F * f1;
    ArmL1.rotateAngleZ = MathHelper.cos(f * 0.6662F + (float)Math.PI) * .8F * f1;
    ArmL2.rotateAngleZ = MathHelper.cos(f * 0.6662F + (float)Math.PI) * .8F * f1;
    ArmL3.rotateAngleZ = MathHelper.cos(f * 0.6662F + (float)Math.PI) * .8F * f1;
    
    Beack1.rotateAngleX = MathHelper.cos(f * 0.6662F) * .001F * f1;
    Beack2.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * .001F * f1;
    
  }

}
