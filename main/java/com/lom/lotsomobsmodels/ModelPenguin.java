// Date: 21.10.2012 10:18:45
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package com.lom.lotsomobsmodels;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

import org.lwjgl.opengl.GL11;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;


@SideOnly(Side.CLIENT)
public class ModelPenguin extends ModelBase
{
  //fields
    ModelRenderer Body;
    ModelRenderer FootL;
    ModelRenderer FootR;
    ModelRenderer WingR;
    ModelRenderer WingL;
    ModelRenderer Head;
    ModelRenderer Beack;
  
  public ModelPenguin()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      Body = new ModelRenderer(this, 0, 0);
      Body.addBox(0F, 0F, 0F, 6, 10, 4);
      Body.setRotationPoint(-3F, 13F, -3F);
      Body.setTextureSize(64, 32);
      Body.mirror = true;
      setRotation(Body, 0F, 0F, 0F);
      FootL = new ModelRenderer(this, 20, 0);
      FootL.addBox(-1F, 0F, -4F, 2, 1, 7);
      FootL.setRotationPoint(2F, 23F, -2F);
      FootL.setTextureSize(64, 32);
      FootL.mirror = true;
      setRotation(FootL, 0F, 0F, 0F);
      FootR = new ModelRenderer(this, 20, 0);
      FootR.addBox(-1F, 0F, -4F, 2, 1, 7);
      FootR.setRotationPoint(-2F, 23F, -2F);
      FootR.setTextureSize(64, 32);
      FootR.mirror = true;
      setRotation(FootR, 0F, 0F, 0F);
      WingR = new ModelRenderer(this, 0, 15);
      WingR.addBox(-6F, 0F, 0F, 6, 1, 2);
      WingR.setRotationPoint(-3F, 15F, -2F);
      WingR.setTextureSize(64, 32);
      WingR.mirror = true;
      setRotation(WingR, 0F, 0F, -1.041002F);
      WingR.mirror = false;
      WingL = new ModelRenderer(this, 0, 15);
      WingL.addBox(0F, 0F, 0F, 6, 1, 2);
      WingL.setRotationPoint(3F, 15F, -2F);
      WingL.setTextureSize(64, 32);
      WingL.mirror = true;
      setRotation(WingL, 0F, 0F, 1.041001F);
      Head = new ModelRenderer(this, 20, 20);
      Head.addBox(0F, 0F, 0F, 4, 3, 4);
      Head.setRotationPoint(-2F, 10F, -4F);
      Head.setTextureSize(64, 32);
      Head.mirror = true;
      setRotation(Head, 0F, 0F, 0F);
      Beack = new ModelRenderer(this, 20, 15);
      Beack.addBox(0F, 0F, -3F, 2, 1, 3);
      Beack.setRotationPoint(-1F, 11F, -4F);
      Beack.setTextureSize(64, 32);
      Beack.mirror = true;
      setRotation(Beack, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5);
    
    if (this.isChild)
    {
        float var8 = 2.0F;
        GL11.glPushMatrix();
        GL11.glTranslatef(0.0F, 5.0F * f5, 2.0F * f5);
        GL11.glPopMatrix();
        GL11.glPushMatrix();
        GL11.glScalef(1.0F / var8, 1.0F / var8, 1.0F / var8);
        GL11.glTranslatef(0.0F, 24.0F * f5, 0.0F);
        Body.render(f5);
        FootL.render(f5);
        FootR.render(f5);
        WingR.render(f5);
        WingL.render(f5);
        Head.render(f5);
        Beack.render(f5);
        GL11.glPopMatrix();
        
    }
    else
    { 
    Body.render(f5);
    FootL.render(f5);
    FootR.render(f5);
    WingR.render(f5);
    WingL.render(f5);
    Head.render(f5);
    Beack.render(f5);
    }
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
    FootL.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
    FootR.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
    WingL.rotateAngleZ = MathHelper.cos(f * 10F + (float)Math.PI) * 1.4F * f1;
    WingR.rotateAngleZ = MathHelper.cos(f * 10F) * 1.4F * f1;
    
  }

}
