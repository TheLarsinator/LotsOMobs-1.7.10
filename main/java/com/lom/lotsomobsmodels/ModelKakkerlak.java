// Date: 16.06.2013 20:09:06
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package com.lom.lotsomobsmodels;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
@SideOnly(Side.CLIENT)
public class ModelKakkerlak extends ModelBase
{
  //fields
    ModelRenderer Head;
    ModelRenderer Body;
    ModelRenderer RearEnd;
    ModelRenderer Leg6;
    ModelRenderer Leg4;
    ModelRenderer Leg2;
    ModelRenderer Leg5;
    ModelRenderer Leg3;
    ModelRenderer Leg1;
    ModelRenderer Antenne1;
    ModelRenderer Antenne;
    ModelRenderer Antenne1B;
    ModelRenderer AntenneB;
  
  public ModelKakkerlak()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      Head = new ModelRenderer(this, 40, 18);
      Head.addBox(-3F, -4F, -8F, 6, 3, 6);
      Head.setRotationPoint(0F, 21F, -4F);
      Head.setTextureSize(64, 32);
      Head.mirror = true;
      setRotation(Head, 0.2557062F, 0F, 0F);
      Body = new ModelRenderer(this, 24, 0);
      Body.addBox(-3F, -3F, -3F, 8, 5, 12);
      Body.setRotationPoint(-1F, 20F, -5F);
      Body.setTextureSize(64, 32);
      Body.mirror = true;
      setRotation(Body, 0F, 0F, 0F);
      RearEnd = new ModelRenderer(this, 0, 15);
      RearEnd.addBox(-5F, -4F, -6F, 8, 4, 13);
      RearEnd.setRotationPoint(1F, 22F, 10F);
      RearEnd.setTextureSize(64, 32);
      RearEnd.mirror = true;
      setRotation(RearEnd, 0F, 0F, 0F);
      Leg6 = new ModelRenderer(this, 0, 0);
      Leg6.addBox(-1F, -1F, -1F, 12, 1, 1);
      Leg6.setRotationPoint(4F, 22F, -6F);
      Leg6.setTextureSize(64, 32);
      Leg6.mirror = true;
      setRotation(Leg6, 0F, 0.2792527F, 0.1919862F);
      Leg4 = new ModelRenderer(this, 0, 0);
      Leg4.addBox(-1F, -1F, -1F, 12, 1, 1);
      Leg4.setRotationPoint(4F, 22F, -2F);
      Leg4.setTextureSize(64, 32);
      Leg4.mirror = true;
      setRotation(Leg4, 0F, 0.0553548F, 0.1919862F);
      Leg2 = new ModelRenderer(this, 0, 0);
      Leg2.addBox(-1F, -1F, -1F, 12, 1, 1);
      Leg2.setRotationPoint(4F, 22F, 1F);
      Leg2.setTextureSize(64, 32);
      Leg2.mirror = true;
      setRotation(Leg2, 0F, -0.3157084F, 0.1919862F);
      Leg5 = new ModelRenderer(this, 0, 0);
      Leg5.addBox(-15F, -1F, -1F, 12, 1, 1);
      Leg5.setRotationPoint(-1F, 21F, -5F);
      Leg5.setTextureSize(64, 32);
      Leg5.mirror = true;
      setRotation(Leg5, 0F, -0.2792527F, -0.1919862F);
      Leg3 = new ModelRenderer(this, 0, 0);
      Leg3.addBox(-15F, -1F, -1F, 12, 1, 1);
      Leg3.setRotationPoint(-1F, 21F, -2F);
      Leg3.setTextureSize(64, 32);
      Leg3.mirror = true;
      setRotation(Leg3, 0.0743572F, -0.0553548F, -0.1919862F);
      Leg1 = new ModelRenderer(this, 0, 0);
      Leg1.addBox(-15F, -1F, 0F, 12, 1, 1);
      Leg1.setRotationPoint(-1F, 21F, -1F);
      Leg1.setTextureSize(64, 32);
      Leg1.mirror = true;
      setRotation(Leg1, 0F, 0.3157084F, -0.1919862F);
      Antenne1 = new ModelRenderer(this, 0, 7);
      Antenne1.addBox(0F, -4F, 0F, 1, 4, 1);
      Antenne1.setRotationPoint(-2.7F, 19F, -12F);
      Antenne1.setTextureSize(64, 32);
      Antenne1.mirror = true;
      setRotation(Antenne1, -0.3717861F, 0F, 0F);
      Antenne = new ModelRenderer(this, 0, 7);
      Antenne.addBox(0F, -4F, 0F, 1, 4, 1);
      Antenne.setRotationPoint(1.7F, 19F, -12F);
      Antenne.setTextureSize(64, 32);
      Antenne.mirror = true;
      setRotation(Antenne, -0.3717861F, 0F, 0F);
      Antenne1B = new ModelRenderer(this, 7, 7);
      Antenne1B.addBox(0F, -6F, 0F, 1, 6, 1);
      Antenne1B.setRotationPoint(-2.7F, 15.8F, -11F);
      Antenne1B.setTextureSize(64, 32);
      Antenne1B.mirror = true;
      setRotation(Antenne1B, -0.7435722F, 0F, 0F);
      AntenneB = new ModelRenderer(this, 7, 7);
      AntenneB.addBox(0F, -6F, 0F, 1, 6, 1);
      AntenneB.setRotationPoint(1.7F, 15.8F, -11F);
      AntenneB.setTextureSize(64, 32);
      AntenneB.mirror = true;
      setRotation(AntenneB, -0.7435722F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5);
    Head.render(f5);
    Body.render(f5);
    RearEnd.render(f5);
    Leg6.render(f5);
    Leg4.render(f5);
    Leg2.render(f5);
    Leg5.render(f5);
    Leg3.render(f5);
    Leg1.render(f5);
    Antenne1.render(f5);
    Antenne.render(f5);
    Antenne1B.render(f5);
    AntenneB.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
    Leg1.rotateAngleY = MathHelper.cos(f * 1F) * 1.4F * f1;
    Leg2.rotateAngleY = MathHelper.cos(f * 1F) * 1.4F * f1;
    Leg6.rotateAngleY = MathHelper.cos(f * 1F + (float)Math.PI) * 1.4F * f1;
    Leg4.rotateAngleY = MathHelper.cos(f * 1F + (float)Math.PI) * 1.4F * f1;
    Leg3.rotateAngleY = MathHelper.cos(f * 1F) * 1.4F * f1;
    Leg5.rotateAngleY = MathHelper.cos(f * 1F + (float)Math.PI) * 1.4F * f1;
  }

}
